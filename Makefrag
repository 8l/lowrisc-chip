# See LICENSE for license details.

# check RISCV environment variable
ifndef RISCV
$(error Please set environment variable RISCV. Please take a look at README)
endif

MODEL := Top
CXX := g++
CXXFLAGS := -O1

SBT := java -Xmx2048M -Xss8M -XX:MaxPermSize=128M -jar sbt-launch.jar
SHELL := /bin/bash

# specify source files
src_path = src/main/scala
chisel_srcs = \
	$(base_dir)/$(src_path)/*.scala \
	$(base_dir)/rocket/$(src_path)/*.scala \
	$(base_dir)/uncore/$(src_path)/*.scala \
	$(base_dir)/hardfloat/$(src_path)/*.scala \
	$(base_dir)/bridge/$(src_path)/*.scala

# translate trace files generated by C++/Verilog simulation
disasm := 2>
which_disasm := $(shell which spike-dasm)
ifneq ($(which_disasm),)
	disasm := 3>&1 1>&2 2>&3 | $(which_disasm) $(DISASM_EXTENSION) >
endif

# define time-out for different types of simulation
timeout_cycles = 100000000
long_timeout_cycles = 1000000000
linux_timeout_cycles = 5000000000

#--------------------------------------------------------------------
# Verilog Generation
#--------------------------------------------------------------------

$(generated_dir)/$(MODEL).$(CONFIG).v: $(chisel_srcs)
	cd $(base_dir) && mkdir -p $(generated_dir) && $(SBT) "project lowrisc_chip" "run --compile --backend $(BACKEND) --targetDir $(generated_dir) --noInlineMem --configInstance lowrisc_chip.$(CONFIG) --configDump --debug"
	cd $(generated_dir) && \
	if [ -a $(MODEL).$(CONFIG).conf ]; then \
	  $(mem_gen) $(generated_dir)/$(MODEL).$(CONFIG).conf >> $(generated_dir)/$(MODEL).$(CONFIG).v; \
	fi

$(generated_dir)/consts.$(CONFIG).vh: $(generated_dir)/$(MODEL).$(CONFIG).v
	echo "\`ifndef CONST_VH" > $@
	echo "\`define CONST_VH" >> $@
	sed -r 's/\(([A-Za-z0-9_]+),([A-Za-z0-9_]+)\)/`define \1 \2/' $(patsubst %.v,%.prm,$<) >> $@
	echo "\`endif // CONST_VH" >> $@

# emacs local variable

# Local Variables:
# mode: makefile
# End:
